@using AimsManagement1.Models;
@model StudTrainRegModel
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>SendOtp</title>

    <style>

        .otp-field {
            flex-direction: row;
            column-gap: 10px;
            display: flex;
            align-items: center;
            justify-content: center;
        }

            .otp-field input {
                height: 45px;
                width: 42px;
                border-radius: 6px;
                outline: none;
                font-size: 1.125rem;
                text-align: center;
                border: 1px solid #ddd;
            }

                .otp-field input:focus {
                    box-shadow: 0 1px 0 rgba(0, 0, 0, 0.1);
                }

                .otp-field input::-webkit-inner-spin-button,
                .otp-field input::-webkit-outer-spin-button {
                    display: none;
                }

        .resend {
            font-size: 12px;
        }

        input[type=submit] {
            width: 40%;
            background-color: #4CAF50;
            color: white;
            padding: 14px 20px;
            margin: 8px 0;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            block-size: fit-content;
        }

            input[type=submit]:hover {
                background-color: #45a049;
            }


        .column {
            width: 60%;
            margin-top: 6px;
        }

        input {
            width: 100%;
            padding: 10px;
            margin-bottom: 20px;
            border: 1px solid #ccc;
            border-radius: 4px;
            box-sizing: border-box;
        }

        * {
            margin: 0;
            padding: 0;
        }

        body {
            display: flex;
            justify-content: center;
            align-items: center;
            width: 100%;
            min-height: 100vh;
            background: #000;
            overflow: hidden;
        }

        .glowing {
            position: relative;
            min-width: 700px;
            height: 550px;
            margin: -350px;
            transform-origin: right;
            animation: colorChange 5s linear infinite;
        }

            .glowing:nth-child(even) {
                transform-origin: left;
            }

        @@keyframes colorChange {
            0% {
                filter: hue-rotate(0deg);
                transform: rotate(0deg);
            }

            100% {
                filter: hue-rotate(360deg);
                transform: rotate(360deg);
            }
        }

        .glowing span {
            position: absolute;
            top: calc(80px * var(--i));
            left: calc(80px * var(--i));
            bottom: calc(80px * var(--i));
            right: calc(80px * var(--i));
        }

            .glowing span::before {
                content: "";
                position: absolute;
                top: 50%;
                left: -8px;
                width: 15px;
                height: 15px;
                background: #f00;
                border-radius: 50%;
            }

            .glowing span:nth-child(3n + 1)::before {
                background: rgba(134,255,0,1);
                box-shadow: 0 0 20px rgba(134,255,0,1), 0 0 40px rgba(134,255,0,1), 0 0 60px rgba(134,255,0,1), 0 0 80px rgba(134,255,0,1), 0 0 0 8px rgba(134,255,0,.1);
            }

            .glowing span:nth-child(3n + 2)::before {
                background: rgba(255,214,0,1);
                box-shadow: 0 0 20px rgba(255,214,0,1), 0 0 40px rgba(255,214,0,1), 0 0 60px rgba(255,214,0,1), 0 0 80px rgba(255,214,0,1), 0 0 0 8px rgba(255,214,0,.1);
            }

            .glowing span:nth-child(3n + 3)::before {
                background: rgba(0,226,255,1);
                box-shadow: 0 0 20px rgba(0,226,255,1), 0 0 40px rgba(0,226,255,1), 0 0 60px rgba(0,226,255,1), 0 0 80px rgba(0,226,255,1), 0 0 0 8px rgba(0,226,255,.1);
            }

            .glowing span:nth-child(3n + 1) {
                animation: animate 10s alternate infinite;
            }

            .glowing span:nth-child(3n + 2) {
                animation: animate-reverse 3s alternate infinite;
            }

            .glowing span:nth-child(3n + 3) {
                animation: animate 8s alternate infinite;
            }

        @@keyframes animate {
            0% {
                transform: rotate(180deg);
            }

            50% {
                transform: rotate(0deg);
            }

            100% {
                transform: rotate(360deg);
            }
        }

        @@keyframes animate-reverse {
            0% {
                transform: rotate(360deg);
            }

            50% {
                transform: rotate(180deg);
            }

            100% {
                transform: rotate(0deg);
            }
        }
    </style>
</head>
<body>
    <div class="glowing">

        <span style="--i:1;"></span>

        <span style="--i:2;"></span>

        <span style="--i:3;"></span>

    </div>

    <div class="glowing">

        <span style="--i:1;"></span>

        <span style="--i:2;"></span>

        <span style="--i:3;"></span>

    </div>

    <div class="glowing">

        <span style="--i:1;"></span>

        <span style="--i:2;"></span>

        <span style="--i:3;"></span>

    </div>

    <div class="glowing">

        <span style="--i:1;"></span>

        <span style="--i:2;"></span>

        <span style="--i:3;"></span>

    </div>
    @using (Html.BeginForm())
    {


        <section class="container-fluid bg-body-tertiary d-block">



            <div class="container" style=" max-width: 500px;
            padding: 20px 20px 20px 70px;
            margin: 0 auto;
            border-radius: 0.3em;
            background-color: #f2f2f2;height:300px">

                <div class="row justify-content-center">
                    <div class="col-12 col-md-6 col-lg-4" style="min-width: 500px;">
                        <div class="card bg-white mb-5 mt-5 border-0" style="box-shadow: 0 12px 15px rgba(0, 0, 0, 0.02);">
                            <div class="card-body p-5 text-center">

                                <h1 class="text-center text-info">Change Password</h1>


                                <div class="column">
                                    <label for="Password" class="text-info">Password:</label><br>
                                    @Html.PasswordFor(model => model.Password, new { placeholder = "Password", @class = "form-control" })
                                    @Html.ValidationMessageFor(Model => Model.Password, "", new { @class = "text-danger" })
                                </div>


                                <div class="column">
                                    <label for="ConfirmPassword" class="text-info">Comferm Password:</label><br>

                                    @Html.PasswordFor(model => model.ConfirmPassword, new { placeholder = "Comferm_Password", @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })

                                </div>
                            </div>


                            <div>
                                <input type="submit" name="submit" class="btn btn-info btn-md" value="submit">
                            </div>




                        </div>
                    </div>
                </div>
            </div>


        </section>

    }
</body>
</html>
