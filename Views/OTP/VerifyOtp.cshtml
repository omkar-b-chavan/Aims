@model OTPModel

@{
    Layout = null;

}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>VerifyOtp</title>
    <style>
        .otp-field {
            flex-direction: row;
            column-gap: 10px;
            display: flex;
            align-items: center;
            justify-content: center;
        }

            .otp-field input {
                height: 45px;
                width: 100%;
                border-radius: 6px;
                outline: none;
                font-size: 1.125rem;
                text-align: center;
                border: 1px solid #ddd;
            }


        .resend {
            font-size: 12px;
        }

        input[type=submit] {
            width: 40%;
            background-color: #4CAF50;
            color: white;
            padding: 14px 20px;
            margin: 8px 0;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            block-size: fit-content;
        }

            input[type=submit]:hover {
                background-color: #45a049;
            }

        * {
            margin: 0;
            padding: 0;
        }

        body {
            display: flex;
            justify-content: center;
            align-items: center;
            width: 100%;
            min-height: 100vh;
            background: #000;
            overflow: hidden;
        }

       

        
    </style>
</head>
<body>
    
    @inject IHttpContextAccessor HttpContextAccessor

    @{
        var session = HttpContextAccessor.HttpContext.Session;

        // Retrieve the start time of the OTP verification session
        var otpStartTime = session.GetString("OTPSessionStartTime");
        if (string.IsNullOrEmpty(otpStartTime))
        {
            // If the session start time is not set, set it to the current time
            otpStartTime = DateTime.UtcNow.ToString();
            session.SetString("OTPSessionStartTime", otpStartTime);
        }

        // Calculate the remaining time for OTP verification
        var currentTime = DateTime.UtcNow;
        var otpSessionTimeout = TimeSpan.FromSeconds(180);
        var elapsedTime = currentTime - DateTime.Parse(otpStartTime);
        var remainingTime = (int)(otpSessionTimeout.TotalSeconds - elapsedTime.TotalSeconds);
        if (remainingTime < 0)
        {
            remainingTime = 0; // Ensure remaining time is non-negative
        }
    }

    @using (Html.BeginForm())
    {
        <div class="container" style="max-width: 500px; padding: 20px 20px 20px 70px; margin: 0 auto; border-radius: 0.3em; background-color: #f2f2f2; height:300px; text-align:center;">
            <section class="container-fluid bg-body-tertiary d-block">
                <div class="row justify-content-center">
                    <div class="col-12 col-md-6 col-lg-4" style="min-width: 500px;">
                        <div class="card bg-white mb-5 mt-5 border-0" style="box-shadow: 0 12px 15px rgba(0, 0, 0, 0.02);">
                            <div class="card-body p-5 text-center">
                                <h1>Verify OTP</h1>
                                <p>Your OTP was sent to you via email</p>

                                <div class="otp-field mb-4">
                                    @Html.TextBoxFor(model => model.Otp)
                                </div>

                                <div id="timer" class="mb-3">Time remaining: <span id="countdown">@remainingTime</span> seconds</div>

                                <div>
                                    <input type="submit" name="submit" class="btn btn-info btn-md" value="Verify Otp">
                                </div>

                                <p id="expiredMessage" class="text-danger" style="display: none;">OTP has expired.</p>

                                <p class="resend text-muted mb-0">Didn't receive code? <a href="@Url.Action("SendOtp", "OTP")">Request again</a></p>
                            </div>
                        </div>
                    </div>
                </div>
            </section>
        </div>
    }


    }

  
    

</body>
</html>
